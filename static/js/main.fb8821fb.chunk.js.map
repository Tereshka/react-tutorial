{"version":3,"sources":["components/Square.jsx","components/Board.jsx","components/Game.jsx","helpers.js","App.jsx","index.js"],"names":["style","background","border","fontSize","fontWeight","cursor","outline","Square","value","handleClick","onClick","borderRadius","width","height","margin","display","gridTemplate","Board","squares","squaresElements","map","el","i","key","mainStyle","styles","Game","useState","Array","fill","history","setHistory","stepNumber","setStepNumber","xIsNext","setXisNext","winner","lines","length","a","b","c","calculateWinner","labelText","timeInHistory","slice","current","prevX","_step","move","destination","step","App","ReactDOM","render","document","getElementById"],"mappings":"gLAEMA,EAAQ,CACZC,WAAY,YACZC,OAAQ,qBACRC,SAAU,OACVC,WAAY,MACZC,OAAQ,UACRC,QAAS,QAUIC,EAPA,SAAC,GAA0B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,YACtB,OACA,4BAAQT,MAAOA,EAAOU,QAASD,GAC5BD,ICXCR,EAAQ,CACZE,OAAQ,qBACRS,aAAc,OACdC,MAAO,QACPC,OAAQ,QACRC,OAAQ,SACRC,QAAS,OACTC,aAAc,mCAcDC,MAXf,YAAwC,IAAxBC,EAAuB,EAAvBA,QAAST,EAAc,EAAdA,YAEjBU,EAAkBD,EAAQE,KAAI,SAACC,EAAIC,GAAL,OACjC,kBAAC,EAAD,CAAQC,IAAKD,EAAGd,MAAOa,EAAIZ,YAAa,kBAAMA,EAAYa,SAG7D,OAAQ,yBAAKtB,MAAOA,GACjBmB,ICfL,IAAMK,EAAY,CAChBT,QAAS,QAGLU,EAAS,CACbb,MAAO,QACPE,OAAQ,aAuDKY,MApDf,WAAiB,IAAD,EACgBC,mBAAS,CAACC,MAAM,GAAGC,KAAK,QADxC,mBACPC,EADO,KACEC,EADF,OAEsBJ,mBAAS,GAF/B,mBAEPK,EAFO,KAEKC,EAFL,OAGgBN,oBAAS,GAHzB,mBAGPO,EAHO,KAGEC,EAHF,KAIRC,EClBD,SAAyBlB,GAW9B,IAVA,IAAMmB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEAf,EAAI,EAAGA,EAAIe,EAAMC,OAAQhB,IAAK,CAAC,IAAD,cACnBe,EAAMf,GADa,GAC9BiB,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAIvB,EAAQqB,IAAMrB,EAAQqB,KAAOrB,EAAQsB,IAAMtB,EAAQqB,KAAOrB,EAAQuB,GACpE,OAAOvB,EAAQqB,GAGnB,OAAO,KDCQG,CAAgBZ,EAAQE,IAEjCW,EAAYP,EAAS,WAAaA,EAAS,gBAAkBF,EAAU,IAAM,KAoCnF,OAAQ,yBAAKlC,MAAOwB,GAClB,kBAAC,EAAD,CAAON,QAASY,EAAQE,GAAavB,YAnCnB,SAAAa,GAClB,IAAMsB,EAAgBd,EAAQe,MAAM,EAAGb,EAAa,GAC9Cc,EAAUF,EAAcZ,GACxBd,EAAO,YAAO4B,GAEhBV,GAAUlB,EAAQI,KACtBJ,EAAQI,GAAKY,EAAU,IAAM,IAC7BH,EAAW,GAAD,mBAAKa,GAAL,CAAoB1B,KAC9Be,EAAcW,EAAcN,QAC5BH,GAAW,SAAAY,GAAK,OAAKA,SA2BrB,yBAAK/C,MAAOyB,GACV,2BAAIkB,GACJ,4BAAQjC,QAVQ,WAClBqB,EAAW,CAACH,MAAM,GAAGC,KAAK,QAC1BI,EAAc,GACdE,GAAW,KAOT,gBApBFL,EAAQV,KAAI,SAAC4B,EAAOC,GAClB,IAAMC,EAAcD,EAAI,qBAAiBA,GAAS,cAClD,OACE,wBAAI1B,IAAK0B,GACP,4BAAQvC,QAAS,kBATvBuB,EADakB,EAUuBF,QARpCd,EAAWgB,EAAO,IAAM,GAFX,IAAAA,IAU+BD,UEpCjCE,EALH,kBAAO,6BACjB,sDACA,kBAAC,EAAD,QCDFC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fb8821fb.chunk.js","sourcesContent":["import React from 'react';\n\nconst style = {\n  background: 'lightblue',\n  border: '2px solid darkblue',\n  fontSize: '30px',\n  fontWeight: '800',\n  cursor: 'pointer',\n  outline: 'none',\n};\n\nconst Square = ({value, handleClick}) => {\n  return (\n  <button style={style} onClick={handleClick}>\n    {value}\n  </button>);\n};\n\nexport default Square;","import React from 'react';\nimport Square from './Square';\n\nconst style = {\n  border: '4px solid darkblue',\n  borderRadius: '10px',\n  width: '250px',\n  height: '250px',\n  margin: '0 auto',\n  display: 'grid',\n  gridTemplate: 'repeat(3, 1fr) / repeat(3, 1fr)',\n};\n\nfunction Board({squares, handleClick}) {\n\n  const squaresElements = squares.map((el, i) =>\n    (<Square key={i} value={el} handleClick={() => handleClick(i)} />)\n  );\n\n  return (<div style={style}>\n    {squaresElements}\n  </div>);\n};\n\nexport default Board;","import React, {useState} from 'react';\nimport Board from './Board';\n\nimport {calculateWinner} from '../helpers';\n\nconst mainStyle = {\n  display: 'flex',\n};\n\nconst styles = {\n  width: '200px',\n  margin: '20px auto',\n};\n\nfunction Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [stepNumber, setStepNumber] = useState(0);\n  const [xIsNext, setXisNext] = useState(true);\n  const winner = calculateWinner(history[stepNumber]);\n\n  const labelText = winner ? 'Winner: ' + winner : 'Next Player ' + (xIsNext ? 'X' : 'O');\n\n  const handleClick = i => {\n    const timeInHistory = history.slice(0, stepNumber + 1);\n    const current = timeInHistory[stepNumber];\n    const squares = [...current];\n\n    if (winner || squares[i]) return;\n    squares[i] = xIsNext ? 'X' : 'O';\n    setHistory([...timeInHistory, squares]);\n    setStepNumber(timeInHistory.length);\n    setXisNext(prevX => !prevX);\n  };\n\n  const jumpTo = step => {\n    setStepNumber(step);\n    setXisNext(step % 2 === 0);\n  };\n\n  const renderMoves = () => (\n    history.map((_step, move) => {\n      const destination = move ? `Go to move#${move}` : 'Go to start';\n      return (\n        <li key={move}>\n          <button onClick={() => jumpTo(move)}>{destination}</button>\n        </li>\n      )\n    })\n  );\n\n  const restartGame = () => {\n    setHistory([Array(9).fill(null)]);\n    setStepNumber(0);\n    setXisNext(true);\n  };\n\n  return (<div style={mainStyle}>\n    <Board squares={history[stepNumber]} handleClick={handleClick} />\n    <div style={styles}>\n      <p>{labelText}</p>\n      <button onClick={restartGame}>Restart Game</button>\n      {renderMoves()}\n    </div>\n  </div>);\n};\n\nexport default Game;","export function calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}","import React from 'react';\nimport Game from './components/Game';\n\nconst App = () => (<div>\n  <h1>Tic Tac Toe with hooks</h1>\n  <Game />\n</div>);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}